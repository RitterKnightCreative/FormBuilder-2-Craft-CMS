{% set adminNotificationEnabled = form.notificationSettings.admin.enabled ? true : false %}

<input type="hidden" value="true" class="enable-notification-section" name="notificationSettings[admin][enabled]" {% if adminNotificationEnabled %}checked{% endif %}>

<div class="setup-container">
    <div class="notification-email-tout">
        <header>
            <span class="tout-title">{{ "Email Settings" |t }}</span>
        </header>
        <div class="body">
            {% set adminFromEmail = form.notificationSettings.admin.fromEmail %}
            <div class="settings-item"
                id="settings-admin-from-email"
                data-modal="true"
                data-modal-title="{{ "From Email" |t }}"
                data-modal-instructions="{{ "The sender’s email address. Defaults to the System Email Address defined in Settings → Email." |t }}"
                data-input-hint="{{ "EMAIL" |t }}"
                data-modal-success-message="{{ "From Email Updated." |t }}"
                data-input-value="{{ adminFromEmail }}">
                <div class="settings-title">
                    <div class="settings-title-text">{{ "From Email" |t }}</div>
                    <div class="settings-result">
                        <code>{{ adminFromEmail ? adminFromEmail : craft.systemSettings.email.emailAddress }}</code>
                    </div>
                </div>
                <div class="settings-action">
                    <a href="#" class="settings-edit" title="{{ "Configure From Email" |t }}">{% include 'formbuilder2/_includes/icons/pencil' ignore missing %}</a>
                </div>
                <input type="text" class="settings-input" name="notificationSettings[admin][fromEmail]" value="{{ adminFromEmail ? adminFromEmail : craft.systemSettings.email.emailAddress }}" autocomplete="off">
            </div>
            {% set adminFromName = form.notificationSettings.admin.fromName %}
            <div class="settings-item"
                id="settings-admin-from-name"
                data-modal="true"
                data-modal-title="{{ "From Name" |t }}"
                data-modal-instructions="{{ "The sender’s name. Defaults to the Sender Name defined in Settings → Email." |t }}"
                data-input-hint="{{ "NAME" |t }}"
                data-modal-success-message="{{ "From Name Updated." |t }}"
                data-input-value="{{ adminFromName }}">
                <div class="settings-title">
                    <div class="settings-title-text">{{ "From Name" |t }}</div>
                    <div class="settings-result">
                        <code>{{ adminFromName ? adminFromName : craft.systemSettings.email.senderName }}</code>
                    </div>
                </div>
                <div class="settings-action">
                    <a href="#" class="settings-edit" title="{{ "Configure From Name" |t }}">{% include 'formbuilder2/_includes/icons/pencil' ignore missing %}</a>
                </div>
                <input type="text" class="settings-input" name="notificationSettings[admin][fromName]" value="{{ adminFromName ? adminFromName : craft.systemSettings.email.senderName }}" autocomplete="off">
            </div>
            {% set adminToEmail = form.notificationSettings.admin.toEmail %}
            <div class="settings-item"
                id="settings-admin-to-email"
                data-modal="true"
                data-modal-title="{{ "To Email" |t }}"
                data-modal-instructions="{{ "The recipient’s email address." |t }}"
                data-input-hint="{{ "EMAIL" |t }}"
                data-modal-success-message="{{ "To Email Updated." |t }}"
                data-input-value="{{ adminToEmail }}">
                <div class="settings-title">
                    <div class="settings-title-text">{{ "To Email" |t }}</div>
                    <div class="settings-result">
                        <code>{{ adminToEmail ? adminToEmail : craft.systemSettings.email.emailAddress }}</code>
                    </div>
                </div>
                <div class="settings-action">
                    <a href="#" class="settings-edit" title="{{ "Configure To Email" |t }}">{% include 'formbuilder2/_includes/icons/pencil' ignore missing %}</a>
                </div>
                <input type="text" class="settings-input" name="notificationSettings[admin][toEmail]" value="{{ adminToEmail ? adminToEmail : craft.systemSettings.email.emailAddress }}" autocomplete="off">
            </div>
            <div class="settings-item">
                <span class="settings-title">
                    <div class="settings-title-text">{{ "Subject" |t }}</div>
                    <div class="settings-result">
                        <code>Field</code>
                    </div>
                </span>
                <span class="settings-action">
                    <a href="#" class="btns btn-link">{{ "Configure" |t }}</a>
                </span>
            </div>
            <div class="settings-item">
                <span class="settings-title">
                    <div class="settings-title-text">{{ "Body" |t }}</div>
                    <div class="settings-result">
                        <code>HTML</code>
                    </div>
                </span>
                <span class="settings-action">
                    <a href="#" class="btns btn-link">{{ "Configure" |t }}</a>
                </span>
            </div>
            {% set adminReplyTo = form.notificationSettings.admin.replyTo %}
            <div class="settings-item"
                id="settings-admin-reply-to"
                data-modal="true"
                data-modal-title="{{ "Reply To" |t }}"
                data-modal-instructions="{{ "The Reply-To email address." |t }}"
                data-input-hint="{{ "EMAIL" |t }}"
                data-modal-success-message="{{ "Reply To Email Updated." |t }}"
                data-input-value="{{ adminReplyTo }}">
                <div class="settings-title">
                    <div class="settings-title-text">{{ "Reply To" |t }}</div>
                    <div class="settings-result">
                        <code>{{ adminReplyTo ? adminReplyTo : craft.systemSettings.email.emailAddress }}</code>
                    </div>
                </div>
                <div class="settings-action">
                    <a href="#" class="settings-edit" title="{{ "Configure Reply To" |t }}">{% include 'formbuilder2/_includes/icons/pencil' ignore missing %}</a>
                </div>
                <input type="text" class="settings-input" name="notificationSettings[admin][replyTo]" value="{{ adminReplyTo ? adminReplyTo : craft.systemSettings.email.emailAddress }}" autocomplete="off">
            </div>
            {% set adminCc = form.notificationSettings.admin.cc %}
            <div class="settings-item"
                id="settings-admin-cc"
                data-modal="true"
                data-modal-title="{{ "CC" |t }}"
                data-modal-instructions="{{ "The recipients that should be CC’d on the email. Each element of this array should be a nested array containing the keys 'name' and 'email'." |t }}"
                data-input-hint="{{ "EMAIL" |t }}"
                data-modal-success-message="{{ "CC Emails Updated." |t }}"
                data-input-value="{{ adminCc }}">
                <div class="settings-title">
                    <div class="settings-title-text">{{ "CC" |t }}</div>
                    <div class="settings-result">
                        <code>{{ adminCc }}</code>
                    </div>
                </div>
                <div class="settings-action">
                    <a href="#" class="settings-edit" title="{{ "Configure CC" |t }}">{% include 'formbuilder2/_includes/icons/pencil' ignore missing %}</a>
                </div>
                <input type="text" class="settings-input" name="notificationSettings[admin][cc]" value="{{ adminCc ? adminCc : null }}" autocomplete="off">
            </div>
            {% set adminBcc = form.notificationSettings.admin.bcc %}
            <div class="settings-item"
                id="settings-admin-cc"
                data-modal="true"
                data-modal-title="{{ "BCC" |t }}"
                data-modal-instructions="{{ "The recipients that should be BCC’d on the email. Each element of this array should be a nested array containing the keys 'name' and 'email'." |t }}"
                data-input-hint="{{ "EMAIL" |t }}"
                data-modal-success-message="{{ "BCC Emails Updated." |t }}"
                data-input-value="{{ adminBcc }}">
                <div class="settings-title">
                    <div class="settings-title-text">{{ "BCC" |t }}</div>
                    <div class="settings-result">
                        <code>{{ adminBcc }}</code>
                    </div>
                </div>
                <div class="settings-action">
                    <a href="#" class="settings-edit" title="{{ "Configure BCC" |t }}">{% include 'formbuilder2/_includes/icons/pencil' ignore missing %}</a>
                </div>
                <input type="text" class="settings-input" name="notificationSettings[admin][bcc]" value="{{ adminBcc ? adminBcc : null }}" autocomplete="off">
            </div>
            <div class="settings-item">
                <span class="settings-title">
                    {{ "Attachments" |t }}
                </span>
                <span class="settings-action">
                    <a href="#" class="btns btn-link">{{ "Configure" |t }}</a>
                </span>
            </div>
            <div class="settings-item">
                <span class="settings-title">
                    {{ "Custom Headers" |t }}
                </span>
                <span class="settings-action">
                    <a href="#" class="btns btn-link">{{ "Configure" |t }}</a>
                </span>
            </div>
        </div>
    </div>
    {# <div class="setup-email-tout">
        <header>
            <span class="icons">{% include 'formbuilder2/_includes/icons/settings' ignore missing %}</span>
            <span class="tout-title">{{ "Email Settings" |t }}</span>
        </header>
        <div class="body">
            <a href="#" class="btns btn-info">{{ "Setup" |t }}</a>
        </div>
    </div> #}

    {# <div class="setup-email-template-tout">
        <header>
            <span class="icons">{% include 'formbuilder2/_includes/icons/template' ignore missing %}</span>
            <span class="tout-title">{{ "Email Template" |t }}</span>
        </header>
        <div class="body">
            <a href="#" class="btns btn-info">{{ "Setup" |t }}</a>
        </div>
    </div> #}
</div>

{# 

<div class="notification-email-tout">
    <header>
        <span class="tout-title">Email Template Setup</span>
    </header>
    <div class="body">
        List of Templates
    </div>
</div> #}



{# <div class="method-notify pane">

  <div class="checkbox-toggle" data-checkbox="notifySubmission">
    <div class="togglebox">
      <svg><use xlink:href="#icon-notify" class="icon-notify"/></svg>
       {{ forms.checkboxField({
        id: 'notifySubmission',
        class: 'notifySubmission',
        name: 'notificationSettings[notifySubmission]',
        value: 1,
        checked: form.notificationSettings.notifySubmission is defined ? form.notificationSettings.notifySubmission : null,
        errors: form.getErrors('notifySubmission'),
        required: false
      }) }}
    </div>
    <div class="togglecontent">
      <h3>{{ "Notify Admin"|t }}</h3>
      <p>{{ "Notify admin of form submission."|t }}</p>
    </div>
  </div>
  <div class="checkbox-extra">
    <div class="notification-tabs-wrapper">
      <div class="notification-tabs-container">
        <div id="email-admin-settings" class="email-tab-content">
          {{ forms.textField({
            label: "Notification Email"|t,
            instructions: "Where should submission notification be sent to?"|t,
            id: 'notifyEmail',
            class: 'notifyEmail',
            name: 'notificationSettings[emailSettings][notifyEmail]',
            value: (form.notificationSettings.emailSettings.notifyEmail is defined ? form.notificationSettings.emailSettings.notifyEmail : null),
            size: 50,
            errors: form.getErrors('notifyEmail'),
            required: false
          }) }}

          {% set fields = form.getFieldLayout().getFields() %}
          {% set groupOptions = [{label: 'Select Email Field', value: ''}] %}
          {% for field in fields %}
            {% set item = field.getField(field) %}
            {% set groupOptions = groupOptions|merge([{ label: item.name, value: item.handle }]) %}
          {% endfor %}
          {{ forms.selectField({
            label: "Custom Email Field"|t,
            instructions: "Select field where to get notification email from. Ex: Drop Down field with different email addresses as the value."|t,
            id: 'customEmailField',
            name: 'notificationSettings[customEmailField]',
            options: groupOptions ? groupOptions : '',
            value: (form.notificationSettings.customEmailField is defined ? form.notificationSettings.customEmailField : null),
            errors: form.getErrors('customEmailField'),
            required: false
          }) }}

          {{ forms.selectField({
            label: "Reply To"|t,
            instructions: "Pick email field for reply-to."|t,
            id: 'replyTo',
            name: 'notificationSettings[replyTo]',
            options: groupOptions ? groupOptions : '',
            value: (form.notificationSettings.replyTo is defined ? form.notificationSettings.replyTo : null),
            errors: form.getErrors('replyTo'),
            required: false
          }) }}
         
          {{ forms.textField({
            label: "Email Subject"|t,
            instructions: "Subject line for email notifications."|t,
            id: 'emailSubject',
            class: 'emailSubject',
            name: 'notificationSettings[emailSettings][emailSubject]',
            value: (form.notificationSettings.emailSettings.emailSubject is defined ? form.notificationSettings.emailSettings.emailSubject : null),
            size: 50,
            errors: form.getErrors('emailSubject'),
            required: false
          }) }}

          <div class="field" id="sendSubmissionData-field">
            <div class="heading">
               <label for="emailSubject">{{ "Include Submission Data"|t }}</label>
              <div class="instructions"><p>{{ "Send submission data with the email?"|t }}</p></div>
            </div>
            <div class="input">
              {{ forms.lightswitch({
                id: 'sendSubmissionData',
                class: 'sendSubmissionData',
                name: 'notificationSettings[emailSettings][sendSubmissionData]',
                on: (form.notificationSettings.emailSettings.sendSubmissionData is defined ? form.notificationSettings.emailSettings.sendSubmissionData : null),
                errors: form.getErrors('sendSubmissionData'),
              }) }}
            </div>
          </div>

          <div class="field">
            <div class="heading">
              <label>{{ "Select Email Template"|t }}</label>
              <div class="instructions">{{ "Please select a template to use for email notifications."|t }}</div>
            </div>

            <div class="input">
              {{ forms.selectField({
                id: 'emailTemplate',
                name: 'notificationSettings[emailTemplate]',
                options: templateGroupOptions ? templateGroupOptions : '',
                value: (form.notificationSettings.emailTemplate is defined ? form.notificationSettings.emailTemplate : null),
                errors: form.getErrors('emailTemplate'),
                required: true
              }) }}
            </div>
          </div>

        </div>
      </div>
    </div>
  </div>
</div> #}